
class TabControl : public Widget
{
	size_t getItemCount() const;

	TabItem* insertItemAt(size_t _index, const std::string& _name);
	TabItem* addItem(const std::string& _name);

	void removeItemAt(size_t _index);
	void removeItem(TabItem* _item);
	void removeAllItems();


	TabItem* getItemAt(size_t _index);
	size_t getItemIndex(TabItem* _item);
	size_t findItemIndex(TabItem* _item);
	size_t findItemIndexWith(const std::string& _name);
	TabItem* findItemWith(const std::string& _name);

	void swapItems(size_t _index1, size_t _index2);

	size_t getIndexSelected() const;
	TabItem* getItemSelected();

	void setIndexSelected(size_t _index);
	void setItemSelected(TabItem* _item);


	void setItemNameAt(size_t _index, const std::string& _name);
	void setItemName(TabItem* _item, const std::string& _name);

	const std::string& getItemNameAt(size_t _index);
	const std::string& getItemName(TabItem* _item);


	void beginToItemAt(size_t _index);
	void beginToItem(TabItem* _item);
	void beginToItemFirst();
	void beginToItemLast();
	void beginToItemSelected();


	void setButtonWidthAt(size_t _index, int _width = DEFAULT);
	void setButtonWidth(TabItem* _item, int _width = DEFAULT);

	int getButtonWidthAt(size_t _index);
	int getButtonWidth(TabItem* _item);

	void setButtonDefaultWidth(int _value);
	int getButtonDefaultWidth() const;

	void setButtonAutoWidth(bool _value);
	bool getButtonAutoWidth() const;

	void setSmoothShow(bool _value);
	bool getSmoothShow() const;

    tolua_outside void* tab_addEvent_selectChange @ addEventTabChangeSelect(lua_State * L, lua_Function funID);
    tolua_outside void  tab_delEvent_selectChange @ delEventTabChangeSelect(void * p);
};
