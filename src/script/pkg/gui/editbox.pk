
class EditBox : public TextBox
{
	void setTextIntervalColour(size_t _start, size_t _count, const Colour& _colour);

	size_t getTextSelectionStart() const;
	size_t getTextSelectionEnd() const;
	size_t getTextSelectionLength() const;

	std::string getTextInterval(size_t _start, size_t _count);
	std::string getTextSelection();
	void setOnlyText(const std::string & _value);
	std::string getOnlyText();
	void insertText(const std::string& _text, size_t _index = ITEM_NONE);
	void addText(const std::string& _text);

	void setTextSelection(size_t _start, size_t _end);
	void deleteTextSelection();
	bool isTextSelection() const;
	void setTextSelectionColour(const Colour& _value);

	void setTextCursor(size_t _index);
	size_t getTextCursor() const;

	size_t getTextLength() const;
	void setOverflowToTheLeft(bool _value);
	bool getOverflowToTheLeft() const;

	void setMaxTextLength(size_t _value);
	size_t getMaxTextLength() const;

	void eraseText(size_t _start, size_t _count);

	void setEditReadOnly(bool _value);
	bool getEditReadOnly() const;

	void setEditPassword(bool _value);
	bool getEditPassword() const;

	void setEditMultiLine(bool _value);
	bool getEditMultiLine() const;

	void setEditStatic(bool _value);
	bool getEditStatic() const;

	void setPasswordChar(Char _value);
	Char getPasswordChar() const;

	void setEditWordWrap(bool _value);
	bool getEditWordWrap() const;

	void setTabPrinting(bool _value);
	bool getTabPrinting() const;

	bool getInvertSelected();
	void setInvertSelected(bool _value);

	void setVisibleVScroll(bool _value);
	bool isVisibleVScroll() const;

	size_t getVScrollRange() const;
	size_t getVScrollPosition();
	void setVScrollPosition(size_t _index);

	void setVisibleHScroll(bool _value);
	bool isVisibleHScroll() const;

	size_t getHScrollRange() const;
	size_t getHScrollPosition();
	void setHScrollPosition(size_t _index);

	tolua_outside void edt_addEvent_textChange @ addEventTextChange(lua_State * L, lua_Function funID);
	tolua_outside void edt_delEvent_textChange @ delEventTextChange(void *p);
};
