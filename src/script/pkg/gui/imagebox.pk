
class ImageBox : public Widget
{
	void setImageInfo(const std::string& _texture, const IntCoord& _coord, const IntSize& _tile);
	void setImageTexture(const std::string& _value);
	void setImageRect(const IntRect& _value);
	void setImageCoord(const IntCoord& _value);
	void setImageTile(const IntSize& _value);

	void setImageIndex(size_t _index);
	size_t getImageIndex() const;
	IntSize getImageSize() const;
	size_t getItemCount() const;

	void setItemSelect(size_t _index);
	size_t getItemSelect() const;
	void resetItemSelect();

	void insertItem(size_t _index, const IntCoord& _item);
	void addItem(const IntCoord& _item);
	void setItem(size_t _index, const IntCoord& _item);

	void deleteItem(size_t _index);
	void deleteAllItems();

	void addItemFrame(size_t _index, const IntCoord& _item);
	void insertItemFrame(size_t _index, size_t _indexFrame, const IntCoord& _item);
	void addItemFrameDublicate(size_t _index, size_t _indexSourceFrame);
	void insertItemFrameDublicate(size_t _index, size_t _indexFrame, size_t _indexSourceFrame);
	void setItemFrame(size_t _index, size_t _indexFrame, const IntCoord& _item);
	void deleteItemFrame(size_t _index, size_t _indexFrame);

	void deleteAllItemFrames(size_t _index);
	void setItemFrameRate(size_t _index, float _rate);
	float getItemFrameRate(size_t _index);

	bool setItemResource(const std::string& _name);
	void setItemGroup(const std::string& _value);
	void setItemName(const std::string& _value);

	inline void alpha_action(float _alpha, float _coef, bool _enable);
	inline void paused_alpha_action(bool b);

	void pause(bool paused);
	bool paused() const;

	void setLoop(bool looped);
	bool looped() const;

	void setFrame(size_t frame);
	size_t getFrame()const;
};
